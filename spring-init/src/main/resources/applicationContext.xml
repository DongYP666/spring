<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.1.xsd
       http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.1.xsd
       http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.1.xsd
       http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.1.xsd">

    <!-- 配置注解自动扫描的包 -->
    <!--<context:component-scan base-package="com.elgin.spring.hibernate"></context:component-scan>-->

    <!-- 导入资源文件 -->
    <context:property-placeholder location="classpath:config/db.properties"/>

    <beans>
        <!--配置连接池-->
        <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource" destroy-method="close">
            <property name="user" value="${jdbc.user}"></property>
            <property name="password" value="${jdbc.password}"></property>
            <property name="driverClass" value="${jdbc.driverClass}"></property>
            <property name="jdbcUrl" value="${jdbc.jdbcUrl}"></property>

            <property name="initialPoolSize" value="${jdbc.initPoolSize}"></property>
            <property name="maxPoolSize" value="${jdbc.maxPoolSize}"></property>
        </bean>

        <!-- 配置一个session工厂 -->
        <bean id="sessionFactory" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean" lazy-init="false">
            <!-- 配置依赖的数据源属性 -->
            <property name="dataSource" ref="dataSource" />
            <!-- hibernate 配置文件的路径 -->
            <property name="configLocation" value="classpath:config/hibernate.cfg.xml"></property>
            <!-- 加载实体类的映射文件位置及名称 -->
            <property name="mappingLocations" value="classpath:mapper/*.hbm.xml"></property>
        </bean>

        <!-- 该 BeanPostProcessor 将自动对标注 @Autowired 的 Bean 进行注入 -->
        <bean class="org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor"/>

        <!-- 配置 Spring 的声明式事物 -->
        <bean id="transactionManager" class="org.springframework.orm.hibernate4.HibernateTransactionManager">
            <property name="sessionFactory" ref="sessionFactory"></property>
        </bean>

        <!-- 支持事务注解 -->
        <tx:annotation-driven transaction-manager="transactionManager"/>
        <!-- 配置事物属性 ，需要事物管理器-->
        <tx:advice id="txAdvice" transaction-manager="transactionManager">
            <tx:attributes>
                <!--propagation事务的传播行为 isolation数据库隔离级别-->
                <tx:method name="insert*" propagation="REQUIRED" isolation="READ_COMMITTED"/>
                <tx:method name="update*" propagation="REQUIRED" isolation="READ_COMMITTED"/>
                <tx:method name="*" propagation="REQUIRED" isolation="READ_COMMITTED" read-only="true"/>
            </tx:attributes>
        </tx:advice>

        <!-- 配置事物切点，并把事物属性和切点关联起来 -->
        <!--<aop:config>-->
            <!--<aop:pointcut expression="execution(* com.elgin.spring.hibernate.service.*.*(..))" id="txPointcut"/>-->
            <!--<aop:advisor advice-ref="txAdvice" pointcut-ref="txPointcut"/>-->
        <!--</aop:config>-->

        <!-- Dao -->
        <bean id="userDao" class="com.ecworking.init.dao.impl.UserDaoDaoImpl"></bean>

        <!-- Service -->
        <bean id="userService" class="com.ecworking.init.service.UserService"></bean>
    </beans>
</beans>